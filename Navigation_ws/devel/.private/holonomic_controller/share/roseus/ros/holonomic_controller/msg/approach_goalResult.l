;; Auto-generated. Do not edit!


(when (boundp 'holonomic_controller::approach_goalResult)
  (if (not (find-package "HOLONOMIC_CONTROLLER"))
    (make-package "HOLONOMIC_CONTROLLER"))
  (shadow 'approach_goalResult (find-package "HOLONOMIC_CONTROLLER")))
(unless (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT")
  (make-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))

(in-package "ROS")
;;//! \htmlinclude approach_goalResult.msg.html


(intern "*ERROR_GENERIC_ERROR*" (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(shadow '*ERROR_GENERIC_ERROR* (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(defconstant holonomic_controller::approach_goalResult::*ERROR_GENERIC_ERROR* 0)
(intern "*ERROR_TIMEOUT*" (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(shadow '*ERROR_TIMEOUT* (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(defconstant holonomic_controller::approach_goalResult::*ERROR_TIMEOUT* 1)
(intern "*ERROR_PREEMPT*" (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(shadow '*ERROR_PREEMPT* (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(defconstant holonomic_controller::approach_goalResult::*ERROR_PREEMPT* 2)
(intern "*ERROR_DEADMAN_IS_OFF*" (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(shadow '*ERROR_DEADMAN_IS_OFF* (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(defconstant holonomic_controller::approach_goalResult::*ERROR_DEADMAN_IS_OFF* 3)
(intern "*ERROR_CONTROLLER_OVERSHOOT*" (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(shadow '*ERROR_CONTROLLER_OVERSHOOT* (find-package "HOLONOMIC_CONTROLLER::APPROACH_GOALRESULT"))
(defconstant holonomic_controller::approach_goalResult::*ERROR_CONTROLLER_OVERSHOOT* 4)
(defclass holonomic_controller::approach_goalResult
  :super ros::object
  :slots (_success _error_enum ))

(defmethod holonomic_controller::approach_goalResult
  (:init
   (&key
    ((:success __success) nil)
    ((:error_enum __error_enum) 0)
    )
   (send-super :init)
   (setq _success __success)
   (setq _error_enum (round __error_enum))
   self)
  (:success
   (&optional __success)
   (if __success (setq _success __success)) _success)
  (:error_enum
   (&optional __error_enum)
   (if __error_enum (setq _error_enum __error_enum)) _error_enum)
  (:serialization-length
   ()
   (+
    ;; bool _success
    1
    ;; int32 _error_enum
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _success
       (if _success (write-byte -1 s) (write-byte 0 s))
     ;; int32 _error_enum
       (write-long _error_enum s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _success
     (setq _success (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; int32 _error_enum
     (setq _error_enum (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get holonomic_controller::approach_goalResult :md5sum-) "578dbba02541007ea7b63f44e3b666d7")
(setf (get holonomic_controller::approach_goalResult :datatype-) "holonomic_controller/approach_goalResult")
(setf (get holonomic_controller::approach_goalResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
bool success

int32 ERROR_GENERIC_ERROR=0
int32 ERROR_TIMEOUT=1
int32 ERROR_PREEMPT=2
int32 ERROR_DEADMAN_IS_OFF=3
int32 ERROR_CONTROLLER_OVERSHOOT=4

int32 error_enum

")



(provide :holonomic_controller/approach_goalResult "578dbba02541007ea7b63f44e3b666d7")


