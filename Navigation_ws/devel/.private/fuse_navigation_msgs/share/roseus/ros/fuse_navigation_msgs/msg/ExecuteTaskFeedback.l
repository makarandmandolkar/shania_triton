;; Auto-generated. Do not edit!


(when (boundp 'fuse_navigation_msgs::ExecuteTaskFeedback)
  (if (not (find-package "FUSE_NAVIGATION_MSGS"))
    (make-package "FUSE_NAVIGATION_MSGS"))
  (shadow 'ExecuteTaskFeedback (find-package "FUSE_NAVIGATION_MSGS")))
(unless (find-package "FUSE_NAVIGATION_MSGS::EXECUTETASKFEEDBACK")
  (make-package "FUSE_NAVIGATION_MSGS::EXECUTETASKFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude ExecuteTaskFeedback.msg.html


(defclass fuse_navigation_msgs::ExecuteTaskFeedback
  :super ros::object
  :slots (_status _task_state _action_index ))

(defmethod fuse_navigation_msgs::ExecuteTaskFeedback
  (:init
   (&key
    ((:status __status) "")
    ((:task_state __task_state) "")
    ((:action_index __action_index) 0)
    )
   (send-super :init)
   (setq _status (string __status))
   (setq _task_state (string __task_state))
   (setq _action_index (round __action_index))
   self)
  (:status
   (&optional __status)
   (if __status (setq _status __status)) _status)
  (:task_state
   (&optional __task_state)
   (if __task_state (setq _task_state __task_state)) _task_state)
  (:action_index
   (&optional __action_index)
   (if __action_index (setq _action_index __action_index)) _action_index)
  (:serialization-length
   ()
   (+
    ;; string _status
    4 (length _status)
    ;; string _task_state
    4 (length _task_state)
    ;; int32 _action_index
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _status
       (write-long (length _status) s) (princ _status s)
     ;; string _task_state
       (write-long (length _task_state) s) (princ _task_state s)
     ;; int32 _action_index
       (write-long _action_index s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _status
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _status (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _task_state
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _task_state (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; int32 _action_index
     (setq _action_index (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get fuse_navigation_msgs::ExecuteTaskFeedback :md5sum-) "42a3a37e957109ca445ba30df675dde3")
(setf (get fuse_navigation_msgs::ExecuteTaskFeedback :datatype-) "fuse_navigation_msgs/ExecuteTaskFeedback")
(setf (get fuse_navigation_msgs::ExecuteTaskFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Feedback
string status # For general status messages
string task_state
int32 action_index


")



(provide :fuse_navigation_msgs/ExecuteTaskFeedback "42a3a37e957109ca445ba30df675dde3")


