; Auto-generated. Do not edit!


(cl:in-package rt_carriage_controller_msgs-msg)


;//! \htmlinclude rt_carriage_controllerAction.msg.html

(cl:defclass <rt_carriage_controllerAction> (roslisp-msg-protocol:ros-message)
  ((action_goal
    :reader action_goal
    :initarg :action_goal
    :type rt_carriage_controller_msgs-msg:rt_carriage_controllerActionGoal
    :initform (cl:make-instance 'rt_carriage_controller_msgs-msg:rt_carriage_controllerActionGoal))
   (action_result
    :reader action_result
    :initarg :action_result
    :type rt_carriage_controller_msgs-msg:rt_carriage_controllerActionResult
    :initform (cl:make-instance 'rt_carriage_controller_msgs-msg:rt_carriage_controllerActionResult))
   (action_feedback
    :reader action_feedback
    :initarg :action_feedback
    :type rt_carriage_controller_msgs-msg:rt_carriage_controllerActionFeedback
    :initform (cl:make-instance 'rt_carriage_controller_msgs-msg:rt_carriage_controllerActionFeedback)))
)

(cl:defclass rt_carriage_controllerAction (<rt_carriage_controllerAction>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <rt_carriage_controllerAction>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'rt_carriage_controllerAction)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name rt_carriage_controller_msgs-msg:<rt_carriage_controllerAction> is deprecated: use rt_carriage_controller_msgs-msg:rt_carriage_controllerAction instead.")))

(cl:ensure-generic-function 'action_goal-val :lambda-list '(m))
(cl:defmethod action_goal-val ((m <rt_carriage_controllerAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader rt_carriage_controller_msgs-msg:action_goal-val is deprecated.  Use rt_carriage_controller_msgs-msg:action_goal instead.")
  (action_goal m))

(cl:ensure-generic-function 'action_result-val :lambda-list '(m))
(cl:defmethod action_result-val ((m <rt_carriage_controllerAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader rt_carriage_controller_msgs-msg:action_result-val is deprecated.  Use rt_carriage_controller_msgs-msg:action_result instead.")
  (action_result m))

(cl:ensure-generic-function 'action_feedback-val :lambda-list '(m))
(cl:defmethod action_feedback-val ((m <rt_carriage_controllerAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader rt_carriage_controller_msgs-msg:action_feedback-val is deprecated.  Use rt_carriage_controller_msgs-msg:action_feedback instead.")
  (action_feedback m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <rt_carriage_controllerAction>) ostream)
  "Serializes a message object of type '<rt_carriage_controllerAction>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_goal) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_result) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_feedback) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <rt_carriage_controllerAction>) istream)
  "Deserializes a message object of type '<rt_carriage_controllerAction>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_goal) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_result) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_feedback) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<rt_carriage_controllerAction>)))
  "Returns string type for a message object of type '<rt_carriage_controllerAction>"
  "rt_carriage_controller_msgs/rt_carriage_controllerAction")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'rt_carriage_controllerAction)))
  "Returns string type for a message object of type 'rt_carriage_controllerAction"
  "rt_carriage_controller_msgs/rt_carriage_controllerAction")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<rt_carriage_controllerAction>)))
  "Returns md5sum for a message object of type '<rt_carriage_controllerAction>"
  "04908d3e3d51140f2cd5200882250ef4")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'rt_carriage_controllerAction)))
  "Returns md5sum for a message object of type 'rt_carriage_controllerAction"
  "04908d3e3d51140f2cd5200882250ef4")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<rt_carriage_controllerAction>)))
  "Returns full string definition for message of type '<rt_carriage_controllerAction>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%rt_carriage_controllerActionGoal action_goal~%rt_carriage_controllerActionResult action_result~%rt_carriage_controllerActionFeedback action_feedback~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%rt_carriage_controllerGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal~%int32 MOVE_UNDEFINED_REQUEST=0~%int32 MOVE_ABSOLUTE      =1~%int32 MOVE_RELATIVE      =2~%int32 CALIBRATE_REACH    =3~%int32 CALIBRATE_LIFT     =4~%int32 CALIBRATE_TILT     =5~%int32 CALIBRATE_SIDESHIFT =6~%~%int32 move_type_enum~%~%float64 position_Goal~%float32 position_tolerance~%int32 mission_type_enum~%int32 MISSION_PICK = 1~%int32 MISSION_PLACE = 2~%int32 SENSOR_NO_SENSE                              =7~%int32 SENSOR_REACH_PAYLOAD_SENSE_LINEAR_CHANGE     =8~%int32 SENSOR_REACH_PAYLOAD_SENSE_NO_CHANGE         =9~%int32 SENSOR_REACH_FORKTIP_SENSE_COLLISION_CHANGE  =10~%int32 SENSOR_REACH_UNTIL_FORKTIP_SENSE_SENSE_VALUE =11~%int32 SENSOR_LIFT_UNTIL_LASER_READING =12~%int32 sensor_type_enum~%~%float64 forktip_distance~%~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%rt_carriage_controllerResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#result definition~%bool success_Result~%~%int32 ERROR_EXCEEDED_TRAVEL=0~%int32 ERROR_TIMEOUT=1~%int32 ERROR_UNDEFINED_MOVE_TYPE=2~%int32 ERROR_UNDEFINED_SENSOR_TYPE=3~%int32 ERROR_STALL_DETECTED=4~%int32 ERROR_DEADMAN_IS_OFF=5~%~%int32 error_enum~%~%float64 exceeded_distance~%float64 allowable_distance~%float64 final_position~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%rt_carriage_controllerFeedback feedback~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#feedback~%float64 percentage_finished~%~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'rt_carriage_controllerAction)))
  "Returns full string definition for message of type 'rt_carriage_controllerAction"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%rt_carriage_controllerActionGoal action_goal~%rt_carriage_controllerActionResult action_result~%rt_carriage_controllerActionFeedback action_feedback~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%rt_carriage_controllerGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal~%int32 MOVE_UNDEFINED_REQUEST=0~%int32 MOVE_ABSOLUTE      =1~%int32 MOVE_RELATIVE      =2~%int32 CALIBRATE_REACH    =3~%int32 CALIBRATE_LIFT     =4~%int32 CALIBRATE_TILT     =5~%int32 CALIBRATE_SIDESHIFT =6~%~%int32 move_type_enum~%~%float64 position_Goal~%float32 position_tolerance~%int32 mission_type_enum~%int32 MISSION_PICK = 1~%int32 MISSION_PLACE = 2~%int32 SENSOR_NO_SENSE                              =7~%int32 SENSOR_REACH_PAYLOAD_SENSE_LINEAR_CHANGE     =8~%int32 SENSOR_REACH_PAYLOAD_SENSE_NO_CHANGE         =9~%int32 SENSOR_REACH_FORKTIP_SENSE_COLLISION_CHANGE  =10~%int32 SENSOR_REACH_UNTIL_FORKTIP_SENSE_SENSE_VALUE =11~%int32 SENSOR_LIFT_UNTIL_LASER_READING =12~%int32 sensor_type_enum~%~%float64 forktip_distance~%~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%rt_carriage_controllerResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#result definition~%bool success_Result~%~%int32 ERROR_EXCEEDED_TRAVEL=0~%int32 ERROR_TIMEOUT=1~%int32 ERROR_UNDEFINED_MOVE_TYPE=2~%int32 ERROR_UNDEFINED_SENSOR_TYPE=3~%int32 ERROR_STALL_DETECTED=4~%int32 ERROR_DEADMAN_IS_OFF=5~%~%int32 error_enum~%~%float64 exceeded_distance~%float64 allowable_distance~%float64 final_position~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%rt_carriage_controllerFeedback feedback~%~%================================================================================~%MSG: rt_carriage_controller_msgs/rt_carriage_controllerFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#feedback~%float64 percentage_finished~%~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <rt_carriage_controllerAction>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_goal))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_result))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_feedback))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <rt_carriage_controllerAction>))
  "Converts a ROS message object to a list"
  (cl:list 'rt_carriage_controllerAction
    (cl:cons ':action_goal (action_goal msg))
    (cl:cons ':action_result (action_result msg))
    (cl:cons ':action_feedback (action_feedback msg))
))
