[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:64:15:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::ostream& fuse_navigation::operator<<(std::ostream&, const fuse_navigation::MapLocation&)[m[Kâ€™ has not been declared within fuse_navigation
 std::ostream &[01;35m[Kfuse_navigation[m[K::operator<<(std::ostream &os, const fuse_navigation::MapLocation &location) {
               [01;35m[K^~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:14:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/node_map.h:67:24:[m[K [01;36m[Knote: [m[Konly here as a friend
   friend std::ostream &[01;36m[Koperator[m[K<<(std::ostream &os, const MapLocation &location);
                        [01;36m[K^~~~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:64:15:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::ostream& fuse_navigation::operator<<(std::ostream&, const fuse_navigation::MapLocation&)[m[Kâ€™ has not been declared within fuse_navigation
 std::ostream &[01;35m[Kfuse_navigation[m[K::operator<<(std::ostream &os, const fuse_navigation::MapLocation &location) {
               [01;35m[K^~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:14:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/node_map.h:67:24:[m[K [01;36m[Knote: [m[Konly here as a friend
   friend std::ostream &[01;36m[Koperator[m[K<<(std::ostream &os, const MapLocation &location);
                        [01;36m[K^~~~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:[m[K In member function â€˜[01m[Kbool fuse_navigation::NodeMap::loadJSON(const string&)[m[Kâ€™:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:174:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGraphLocation[m[Kâ€™ is not a member of â€˜[01m[Kfuse_navigation[m[Kâ€™
     fuse_navigation::[01;31m[KGraphLocation[m[K mapxyz;
                      [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:174:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KMapLocation[m[Kâ€™
     fuse_navigation::[01;36m[KGraphLocation[m[K mapxyz;
                      [01;36m[K^~~~~~~~~~~~~[m[K
                      [32m[KMapLocation[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kmapxyz[m[Kâ€™ was not declared in this scope
     [01;31m[Kmapxyz[m[K = location_value.get<fuse_navigation::GraphLocation>();
     [01;31m[K^~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:[m[K In member function â€˜[01m[Kbool fuse_navigation::NodeMap::loadJSON(const string&)[m[Kâ€™:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:174:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGraphLocation[m[Kâ€™ is not a member of â€˜[01m[Kfuse_navigation[m[Kâ€™
     fuse_navigation::[01;31m[KGraphLocation[m[K mapxyz;
                      [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:174:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KMapLocation[m[Kâ€™
     fuse_navigation::[01;36m[KGraphLocation[m[K mapxyz;
                      [01;36m[K^~~~~~~~~~~~~[m[K
                      [32m[KMapLocation[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kmapxyz[m[Kâ€™ was not declared in this scope
     [01;31m[Kmapxyz[m[K = location_value.get<fuse_navigation::GraphLocation>();
     [01;31m[K^~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGraphLocation[m[Kâ€™ is not a member of â€˜[01m[Kfuse_navigation[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::[01;31m[KGraphLocation[m[K>();
                                                  [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KMapLocation[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::[01;36m[KGraphLocation[m[K>();
                                                  [01;36m[K^~~~~~~~~~~~~[m[K
                                                  [32m[KMapLocation[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGraphLocation[m[Kâ€™ is not a member of â€˜[01m[Kfuse_navigation[m[Kâ€™
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KMapLocation[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::[01;36m[KGraphLocation[m[K>();
                                                  [01;36m[K^~~~~~~~~~~~~[m[K
                                                  [32m[KMapLocation[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Knlohmann::basic_json<>::get<<expression error> >()[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGraphLocation[m[Kâ€™ is not a member of â€˜[01m[Kfuse_navigation[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::[01;31m[KGraphLocation[m[K>();
                                                  [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KMapLocation[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::[01;36m[KGraphLocation[m[K>();
                                                  [01;36m[K^~~~~~~~~~~~~[m[K
                                                  [32m[KMapLocation[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGraphLocation[m[Kâ€™ is not a member of â€˜[01m[Kfuse_navigation[m[Kâ€™
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:50:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KMapLocation[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::[01;36m[KGraphLocation[m[K>();
                                                  [01;36m[K^~~~~~~~~~~~~[m[K
                                                  [32m[KMapLocation[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Knlohmann::basic_json<>::get<<expression error> >()[m[Kâ€™
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19419:16:[m[K [01;36m[Knote: [m[Kcandidate: template<class BasicJsonType, typename std::enable_if<std::is_same<typename std::remove_const<_Tp>::type, nlohmann::basic_json<> >::value, int>::type <anonymous> > nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with BasicJsonType = BasicJsonType; typename std::enable_if<std::is_same<typename std::remove_const<BasicJsonType>::type, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::value, int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     basic_json [01;36m[Kget[m[K() const
                [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19419:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19442:19:[m[K [01;36m[Knote: [m[Kcandidate: template<class BasicJsonType, typename std::enable_if<((! std::is_same<BasicJsonType, nlohmann::basic_json<> >::value) && nlohmann::detail::is_basic_json<BasicJsonType>::value), int>::type <anonymous> > BasicJsonType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with BasicJsonType = BasicJsonType; typename std::enable_if<((! std::is_same<BasicJsonType, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::value) && nlohmann::detail::is_basic_json<BasicJsonType>::value), int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     BasicJsonType [01;36m[Kget[m[K() const
                   [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19442:19:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19492:15:[m[K [01;36m[Knote: [m[Kcandidate: template<class ValueTypeCV, class ValueType, typename std::enable_if<(((! nlohmann::detail::is_basic_json<T>::value) && nlohmann::detail::has_from_json<nlohmann::basic_json<>, ValueType, void>::value) && (! nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<>, ValueType, void>::value)), int>::type <anonymous> > ValueType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with ValueTypeCV = ValueTypeCV; ValueType = ValueType; typename std::enable_if<(((! nlohmann::detail::is_basic_json<U>::value) && nlohmann::detail::has_from_json<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value)), int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     ValueType [01;36m[Kget[m[K() const noexcept(noexcept(
               [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19492:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19543:15:[m[K [01;36m[Knote: [m[Kcandidate: template<class ValueTypeCV, class ValueType, typename std::enable_if<((! std::is_same<nlohmann::basic_json<>, ValueType>::value) && nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<>, ValueType, void>::value), int>::type <anonymous> > ValueType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with ValueTypeCV = ValueTypeCV; ValueType = ValueType; typename std::enable_if<((! std::is_same<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value), int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     ValueType [01;36m[Kget[m[K() const noexcept(noexcept(
               [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19543:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19698:10:[m[K [01;36m[Knote: [m[Kcandidate: template<class PointerType, typename std::enable_if<std::is_pointer<_Tp>::value, int>::type <anonymous> > decltype (declval<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::basic_json_t&>().get_ptr<PointerType>()) nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() [with PointerType = PointerType; typename std::enable_if<std::is_pointer<_Ptr>::value, int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     auto [01;36m[Kget[m[K() noexcept -> decltype(std::declval<basic_json_t&>().template get_ptr<PointerType>())
          [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19698:10:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19710:20:[m[K [01;36m[Knote: [m[Kcandidate: template<class PointerType, typename std::enable_if<std::is_pointer<_Tp>::value, int>::type <anonymous> > constexpr decltype (declval<const basic_json_t&>().get_ptr<PointerType>()) nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with PointerType = PointerType; typename std::enable_if<std::is_pointer<_Ptr>::value, int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     constexpr auto [01;36m[Kget[m[K() const noexcept -> decltype(std::declval<const basic_json_t&>().template get_ptr<PointerType>())
                    [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19710:20:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19419:16:[m[K [01;36m[Knote: [m[Kcandidate: template<class BasicJsonType, typename std::enable_if<std::is_same<typename std::remove_const<_Tp>::type, nlohmann::basic_json<> >::value, int>::type <anonymous> > nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with BasicJsonType = BasicJsonType; typename std::enable_if<std::is_same<typename std::remove_const<BasicJsonType>::type, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::value, int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     basic_json [01;36m[Kget[m[K() const
                [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19419:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19442:19:[m[K [01;36m[Knote: [m[Kcandidate: template<class BasicJsonType, typename std::enable_if<((! std::is_same<BasicJsonType, nlohmann::basic_json<> >::value) && nlohmann::detail::is_basic_json<BasicJsonType>::value), int>::type <anonymous> > BasicJsonType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with BasicJsonType = BasicJsonType; typename std::enable_if<((! std::is_same<BasicJsonType, nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::value) && nlohmann::detail::is_basic_json<BasicJsonType>::value), int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     BasicJsonType [01;36m[Kget[m[K() const
                   [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19442:19:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19492:15:[m[K [01;36m[Knote: [m[Kcandidate: template<class ValueTypeCV, class ValueType, typename std::enable_if<(((! nlohmann::detail::is_basic_json<T>::value) && nlohmann::detail::has_from_json<nlohmann::basic_json<>, ValueType, void>::value) && (! nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<>, ValueType, void>::value)), int>::type <anonymous> > ValueType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with ValueTypeCV = ValueTypeCV; ValueType = ValueType; typename std::enable_if<(((! nlohmann::detail::is_basic_json<U>::value) && nlohmann::detail::has_from_json<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value)), int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     ValueType [01;36m[Kget[m[K() const noexcept(noexcept(
               [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19492:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19543:15:[m[K [01;36m[Knote: [m[Kcandidate: template<class ValueTypeCV, class ValueType, typename std::enable_if<((! std::is_same<nlohmann::basic_json<>, ValueType>::value) && nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<>, ValueType, void>::value), int>::type <anonymous> > ValueType nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with ValueTypeCV = ValueTypeCV; ValueType = ValueType; typename std::enable_if<((! std::is_same<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && nlohmann::detail::has_non_default_from_json<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value), int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     ValueType [01;36m[Kget[m[K() const noexcept(noexcept(
               [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19543:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19698:10:[m[K [01;36m[Knote: [m[Kcandidate: template<class PointerType, typename std::enable_if<std::is_pointer<_Tp>::value, int>::type <anonymous> > decltype (declval<nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::basic_json_t&>().get_ptr<PointerType>()) nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() [with PointerType = PointerType; typename std::enable_if<std::is_pointer<_Ptr>::value, int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     auto [01;36m[Kget[m[K() noexcept -> decltype(std::declval<basic_json_t&>().template get_ptr<PointerType>())
          [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19698:10:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
In file included from [01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:15:0[m[K:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19710:20:[m[K [01;36m[Knote: [m[Kcandidate: template<class PointerType, typename std::enable_if<std::is_pointer<_Tp>::value, int>::type <anonymous> > constexpr decltype (declval<const basic_json_t&>().get_ptr<PointerType>()) nlohmann::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::get() const [with PointerType = PointerType; typename std::enable_if<std::is_pointer<_Ptr>::value, int>::type <anonymous> = <enumerator>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::adl_serializer; BinaryType = std::vector<unsigned char>]
     constexpr auto [01;36m[Kget[m[K() const noexcept -> decltype(std::declval<const basic_json_t&>().template get_ptr<PointerType>())
                    [01;36m[K^~~[m[K
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/include/fuse_navigation/json.hpp:19710:20:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/makarand/Documents/Navigation_ws/src/fuse_navigation/fuse_navigation/src/node_map.cpp:176:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
     mapxyz = location_value.get<fuse_navigation::GraphLocation>([01;31m[K)[m[K;
                                                                 [01;31m[K^[m[K
make[2]: *** [CMakeFiles/node_map_node.dir/src/node_map.cpp.o] Error 1
make[2]: *** [CMakeFiles/behavior_manager.dir/src/node_map.cpp.o] Error 1
make[1]: *** [CMakeFiles/node_map_node.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
make[1]: *** [CMakeFiles/behavior_manager.dir/all] Error 2
make: *** [all] Error 2
