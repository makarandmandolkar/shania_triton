;; Auto-generated. Do not edit!


(when (boundp 'accerion_driver_msgs::GetRecordingsGoal)
  (if (not (find-package "ACCERION_DRIVER_MSGS"))
    (make-package "ACCERION_DRIVER_MSGS"))
  (shadow 'GetRecordingsGoal (find-package "ACCERION_DRIVER_MSGS")))
(unless (find-package "ACCERION_DRIVER_MSGS::GETRECORDINGSGOAL")
  (make-package "ACCERION_DRIVER_MSGS::GETRECORDINGSGOAL"))

(in-package "ROS")
;;//! \htmlinclude GetRecordingsGoal.msg.html


(defclass accerion_driver_msgs::GetRecordingsGoal
  :super ros::object
  :slots (_mode _recordingIndexes _path ))

(defmethod accerion_driver_msgs::GetRecordingsGoal
  (:init
   (&key
    ((:mode __mode) "")
    ((:recordingIndexes __recordingIndexes) (make-array 0 :initial-element 0 :element-type :char))
    ((:path __path) "")
    )
   (send-super :init)
   (setq _mode (string __mode))
   (setq _recordingIndexes __recordingIndexes)
   (setq _path (string __path))
   self)
  (:mode
   (&optional __mode)
   (if __mode (setq _mode __mode)) _mode)
  (:recordingIndexes
   (&optional __recordingIndexes)
   (if __recordingIndexes (setq _recordingIndexes __recordingIndexes)) _recordingIndexes)
  (:path
   (&optional __path)
   (if __path (setq _path __path)) _path)
  (:serialization-length
   ()
   (+
    ;; string _mode
    4 (length _mode)
    ;; uint8[] _recordingIndexes
    (* 1    (length _recordingIndexes)) 4
    ;; string _path
    4 (length _path)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _mode
       (write-long (length _mode) s) (princ _mode s)
     ;; uint8[] _recordingIndexes
     (write-long (length _recordingIndexes) s)
     (princ _recordingIndexes s)
     ;; string _path
       (write-long (length _path) s) (princ _path s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _mode
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _mode (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; uint8[] _recordingIndexes
   (let ((n (sys::peek buf ptr- :integer))) (incf ptr- 4)
     (setq _recordingIndexes (make-array n :element-type :char))
     (replace _recordingIndexes buf :start2 ptr-) (incf ptr- n))
   ;; string _path
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _path (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get accerion_driver_msgs::GetRecordingsGoal :md5sum-) "0d868aed50984bd5795d668d45d213f9")
(setf (get accerion_driver_msgs::GetRecordingsGoal :datatype-) "accerion_driver_msgs/GetRecordingsGoal")
(setf (get accerion_driver_msgs::GetRecordingsGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# goal
string mode                 # list(to retrieve list of recordings), download(to retrieve one or more recordings), delete(delete one or more recordings)
uint8[]  recordingIndexes   # indexes of the recordings to be retrieved
string path                 # Path to store the recordings

")



(provide :accerion_driver_msgs/GetRecordingsGoal "0d868aed50984bd5795d668d45d213f9")


