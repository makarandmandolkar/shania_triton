; Auto-generated. Do not edit!


(cl:in-package fuse_pathfollowing_msgs-msg)


;//! \htmlinclude UpdatePathAction.msg.html

(cl:defclass <UpdatePathAction> (roslisp-msg-protocol:ros-message)
  ((action_goal
    :reader action_goal
    :initarg :action_goal
    :type fuse_pathfollowing_msgs-msg:UpdatePathActionGoal
    :initform (cl:make-instance 'fuse_pathfollowing_msgs-msg:UpdatePathActionGoal))
   (action_result
    :reader action_result
    :initarg :action_result
    :type fuse_pathfollowing_msgs-msg:UpdatePathActionResult
    :initform (cl:make-instance 'fuse_pathfollowing_msgs-msg:UpdatePathActionResult))
   (action_feedback
    :reader action_feedback
    :initarg :action_feedback
    :type fuse_pathfollowing_msgs-msg:UpdatePathActionFeedback
    :initform (cl:make-instance 'fuse_pathfollowing_msgs-msg:UpdatePathActionFeedback)))
)

(cl:defclass UpdatePathAction (<UpdatePathAction>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <UpdatePathAction>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'UpdatePathAction)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name fuse_pathfollowing_msgs-msg:<UpdatePathAction> is deprecated: use fuse_pathfollowing_msgs-msg:UpdatePathAction instead.")))

(cl:ensure-generic-function 'action_goal-val :lambda-list '(m))
(cl:defmethod action_goal-val ((m <UpdatePathAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fuse_pathfollowing_msgs-msg:action_goal-val is deprecated.  Use fuse_pathfollowing_msgs-msg:action_goal instead.")
  (action_goal m))

(cl:ensure-generic-function 'action_result-val :lambda-list '(m))
(cl:defmethod action_result-val ((m <UpdatePathAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fuse_pathfollowing_msgs-msg:action_result-val is deprecated.  Use fuse_pathfollowing_msgs-msg:action_result instead.")
  (action_result m))

(cl:ensure-generic-function 'action_feedback-val :lambda-list '(m))
(cl:defmethod action_feedback-val ((m <UpdatePathAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader fuse_pathfollowing_msgs-msg:action_feedback-val is deprecated.  Use fuse_pathfollowing_msgs-msg:action_feedback instead.")
  (action_feedback m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <UpdatePathAction>) ostream)
  "Serializes a message object of type '<UpdatePathAction>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_goal) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_result) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_feedback) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <UpdatePathAction>) istream)
  "Deserializes a message object of type '<UpdatePathAction>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_goal) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_result) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_feedback) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<UpdatePathAction>)))
  "Returns string type for a message object of type '<UpdatePathAction>"
  "fuse_pathfollowing_msgs/UpdatePathAction")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'UpdatePathAction)))
  "Returns string type for a message object of type 'UpdatePathAction"
  "fuse_pathfollowing_msgs/UpdatePathAction")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<UpdatePathAction>)))
  "Returns md5sum for a message object of type '<UpdatePathAction>"
  "558bfcbaecae3d397ae90e5395ed0a2f")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'UpdatePathAction)))
  "Returns md5sum for a message object of type 'UpdatePathAction"
  "558bfcbaecae3d397ae90e5395ed0a2f")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<UpdatePathAction>)))
  "Returns full string definition for message of type '<UpdatePathAction>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%UpdatePathActionGoal action_goal~%UpdatePathActionResult action_result~%UpdatePathActionFeedback action_feedback~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%UpdatePathGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%## Action used to command the vehicle to update the path~%~%# Goal~%bool append # If true, append this path to the current one; if false, replace current path with this one~%Path path ~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/Path~%~%Header header~%Segment[] segments~%================================================================================~%MSG: fuse_pathfollowing_msgs/Segment~%## Array of segments that compose a path~%~%# Defines the type of segment (see possible types below)~%uint8 type_enum~%# Possible types~%uint8 TYPE_UNKNOWN = 0~%uint8 TYPE_LINE = 1~%uint8 TYPE_ARC = 2~%~%# The ID of the node that has been reached when this segment is complete.~%#   If this ID is blank, then this segment is intermediary, and no node is reached on completion~%string completion_node_id~%~%# 3D location (in meters) of the start of the segment~%geometry_msgs/Vector3 start~%# 3D location (in meters) of the end of the segment~%geometry_msgs/Vector3 end~%~%## Arc-specific parameters~%# Radius (in meters) of the arc~%float32 radius~%# True if arc is > 180 degrees, False if not~%bool is_large_arc~%# True if arc moves in clockwise direction, False if counter-clockwise~%bool is_clockwise~%~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%UpdatePathResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Result~%bool finished_path~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%UpdatePathFeedback feedback~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Feedback~%string status~%string[] completed_nodes # List of the completed node ids - excludes first node since it is never \"reached\" by the path follower~%float64 percent_complete # Percent of the full path distance that has been traversed (0-100)~%float64 distance_to_end  # Distance in meters (along path) to the end of the path~%float64 distance_to_next_node # Distance in meters (along path) to the next node~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'UpdatePathAction)))
  "Returns full string definition for message of type 'UpdatePathAction"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%UpdatePathActionGoal action_goal~%UpdatePathActionResult action_result~%UpdatePathActionFeedback action_feedback~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%UpdatePathGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%## Action used to command the vehicle to update the path~%~%# Goal~%bool append # If true, append this path to the current one; if false, replace current path with this one~%Path path ~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/Path~%~%Header header~%Segment[] segments~%================================================================================~%MSG: fuse_pathfollowing_msgs/Segment~%## Array of segments that compose a path~%~%# Defines the type of segment (see possible types below)~%uint8 type_enum~%# Possible types~%uint8 TYPE_UNKNOWN = 0~%uint8 TYPE_LINE = 1~%uint8 TYPE_ARC = 2~%~%# The ID of the node that has been reached when this segment is complete.~%#   If this ID is blank, then this segment is intermediary, and no node is reached on completion~%string completion_node_id~%~%# 3D location (in meters) of the start of the segment~%geometry_msgs/Vector3 start~%# 3D location (in meters) of the end of the segment~%geometry_msgs/Vector3 end~%~%## Arc-specific parameters~%# Radius (in meters) of the arc~%float32 radius~%# True if arc is > 180 degrees, False if not~%bool is_large_arc~%# True if arc moves in clockwise direction, False if counter-clockwise~%bool is_clockwise~%~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%UpdatePathResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Result~%bool finished_path~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%UpdatePathFeedback feedback~%~%================================================================================~%MSG: fuse_pathfollowing_msgs/UpdatePathFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Feedback~%string status~%string[] completed_nodes # List of the completed node ids - excludes first node since it is never \"reached\" by the path follower~%float64 percent_complete # Percent of the full path distance that has been traversed (0-100)~%float64 distance_to_end  # Distance in meters (along path) to the end of the path~%float64 distance_to_next_node # Distance in meters (along path) to the next node~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <UpdatePathAction>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_goal))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_result))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_feedback))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <UpdatePathAction>))
  "Converts a ROS message object to a list"
  (cl:list 'UpdatePathAction
    (cl:cons ':action_goal (action_goal msg))
    (cl:cons ':action_result (action_result msg))
    (cl:cons ':action_feedback (action_feedback msg))
))
